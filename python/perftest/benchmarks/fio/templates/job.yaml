apiVersion: batch/v1
kind: Job
metadata:
  name: {{ name }}-fio
  labels:
    {{ subresource_labels(name) | indent(4) }}
spec:
  completions: {{ spec.clients }}
  parallelism: {{ spec.clients }}
  template:
    metadata:
      labels:
        {{ subresource_labels(name) | indent(8) }}
    spec:
      {%- if spec.hostNetwork %}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {%- endif %}
      restartPolicy: Never
      containers:
        - name: fio
          image: {{ spec.image }}
          imagePullPolicy: {{ spec.imagePullPolicy }}
          env:
            - name: MODE
              value: {{ spec.mode }}
            - name: NUM_CLIENTS
              value: "{{ spec.clients }}"
            - name: BENCHMARK_NAME
              value: {{ name }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: jobs
              mountPath: /fio
              readOnly: true
            - name: scratch
              mountPath: /scratch
          # The container has successfully started once the data directory exists
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - "test -f /scratch/${POD_NAME}/RUNNING"
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - "test -f /scratch/${POD_NAME}/RUNNING"
          startupProbe:
            exec:
              command:
                - bash
                - -c
                - "test -f /scratch/${POD_NAME}/RUNNING"
            # Allow up to 10m for the pods to synchronise
            periodSeconds: 1
            failureThreshold: 600
      volumes:
        - name: jobs
          configMap:
            name: {{ name }}-fio-config
        - name: scratch
          persistentVolumeClaim:
            claimName: {{ name }}-fio-scratch
      {%- if spec.affinity %}
      affinity:
        {{ spec.affinity | toyaml | indent(8) }}
      {%- endif %}
      {%- if spec.nodeSelector %}
      nodeSelector:
        {{ spec.nodeSelector | toyaml | indent(8) }}
      {%- endif %}
      {%- if spec.tolerations %}
      tolerations:
        {{ spec.tolerations | toyaml | indent(8) }}
      {%- endif %}
