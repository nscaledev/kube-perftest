---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ benchmark.metadata.name }}-ssh-config
  labels:
    {{ settings.kind_label }}: {{ benchmark.kind }}
    {{ settings.namespace_label }}: {{ benchmark.metadata.namespace }}
    {{ settings.name_label }}: {{ benchmark.metadata.name }}
data:
  01-default-port.conf: |
    Port {{ benchmark.spec.ssh_port }}
---
apiVersion: batch.volcano.sh/v1alpha1
kind: Job
metadata:
  name: {{ benchmark.metadata.name }}
  labels:
    {{ settings.kind_label }}: {{ benchmark.kind }}
    {{ settings.namespace_label }}: {{ benchmark.metadata.namespace }}
    {{ settings.name_label }}: {{ benchmark.metadata.name }}
spec:
  maxRetry: 10
  minAvailable: {{ benchmark.spec.num_workers + 1 }}
  queue: {{ settings.queue_name }}
  schedulerName: {{ settings.scheduler_name }}
  priorityClassName: {{ benchmark.status.priority_class_name }}
  plugins:
    env: []
    ssh: []
    svc:
     - --disable-network-policy
  policies:
    - event: PodEvicted
      action: RestartJob
  tasks:
    - name: mpi-master
      replicas: 1
      policies:
        - event: TaskCompleted
          action: CompleteJob
      template:
        metadata:
          labels:
            {{ settings.kind_label }}: {{ benchmark.kind }}
            {{ settings.namespace_label }}: {{ benchmark.metadata.namespace }}
            {{ settings.name_label }}: {{ benchmark.metadata.name }}
            {{ settings.component_label }}: master
        spec:
          priorityClassName: {{ benchmark.status.priority_class_name }}
          {%- if benchmark.spec.host_network %}
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          {%- endif %}
          restartPolicy: OnFailure
          containers:
            - name: mpi-master
              image: {{ benchmark.spec.image }}
              imagePullPolicy: {{ benchmark.spec.image_pull_policy }}
              env:
                - name: SSH_PORT
                  value: "{{ benchmark.spec.ssh_port }}"
              command:
                - /usr/local/bin/mpi-master
                - {{ benchmark.spec.problem_size }}
                - {{ benchmark.spec.iterative_method }}
                - "{{ benchmark.spec.num_procs }}"
              volumeMounts:
                - name: ssh-config
                  mountPath: /etc/ssh/ssh_config.d/01-default-port.conf
                  subPath: 01-default-port.conf
                  readOnly: true         
          volumes:
            - name: ssh-config
              configMap:
                name: {{ benchmark.metadata.name }}-ssh-config
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                # Avoid pods from other jobs
                - labelSelector:
                    matchExpressions:
                      - key: {{ settings.kind_label }}
                        operator: NotIn
                        values:
                          - {{ benchmark.kind }}
                  topologyKey: "kubernetes.io/hostname"
                - labelSelector:
                    matchExpressions:
                      - key: {{ settings.namespace_label }}
                        operator: NotIn
                        values:
                          - {{ benchmark.metadata.namespace }}
                  topologyKey: "kubernetes.io/hostname"
                - labelSelector:
                    matchExpressions:
                      - key: {{ settings.name_label }}
                        operator: NotIn
                        values:
                          - {{ benchmark.metadata.name }}
                  topologyKey: "kubernetes.io/hostname"

    - name: mpi-worker
      replicas: {{ benchmark.spec.num_workers }}
      template:
        metadata:
          labels:
            {{ settings.kind_label }}: {{ benchmark.kind }}
            {{ settings.namespace_label }}: {{ benchmark.metadata.namespace }}
            {{ settings.name_label }}: {{ benchmark.metadata.name }}
            {{ settings.component_label }}: worker
        spec:
          priorityClassName: {{ benchmark.status.priority_class_name }}
          {%- if benchmark.spec.host_network %}
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          {%- endif %}
          restartPolicy: OnFailure
          containers:
            - name: mpi-worker
              image: {{ benchmark.spec.image }}
              imagePullPolicy: {{ benchmark.spec.image_pull_policy }}
              env:
                - name: SSH_PORT
                  value: "{{ benchmark.spec.ssh_port }}"
              ports:
                - name: ssh
                  containerPort: {{ benchmark.spec.ssh_port }}
                  protocol: TCP
              command:
                - /usr/local/bin/mpi-worker
              volumeMounts:
                - name: ssh-config
                  mountPath: /etc/ssh/ssh_config.d/01-default-port.conf
                  subPath: 01-default-port.conf
                  readOnly: true
          volumes:
            - name: ssh-config
              configMap:
                name: {{ benchmark.metadata.name }}-ssh-config
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                # Avoid pods from other jobs
                - labelSelector:
                    matchExpressions:
                      - key: {{ settings.kind_label }}
                        operator: NotIn
                        values:
                          - {{ benchmark.kind }}
                  topologyKey: "kubernetes.io/hostname"
                - labelSelector:
                    matchExpressions:
                      - key: {{ settings.namespace_label }}
                        operator: NotIn
                        values:
                          - {{ benchmark.metadata.namespace }}
                  topologyKey: "kubernetes.io/hostname"
                - labelSelector:
                    matchExpressions:
                      - key: {{ settings.name_label }}
                        operator: NotIn
                        values:
                          - {{ benchmark.metadata.name }}
                  topologyKey: "kubernetes.io/hostname"
                {%- if benchmark.spec.host_network %}
                # Avoid other workers from our own job if running with host networking
                - labelSelector:
                    matchExpressions:
                      - key: {{ settings.component_label }}
                        operator: In
                        values:
                          - worker
                  topologyKey: "kubernetes.io/hostname"
                {%- endif %}
          {%- if not benchmark.spec.host_network %}
          # If running with CNI networking, spread the workers evenly across eligible nodes
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: "kubernetes.io/hostname"
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchExpressions:
                  - key: {{ settings.kind_label }}
                    operator: In
                    values:
                      - {{ benchmark.kind }}
                  - key: {{ settings.namespace_label }}
                    operator: In
                    values:
                      - {{ benchmark.metadata.namespace }}
                  - key: {{ settings.name_label }}
                    operator: In
                    values:
                      - {{ benchmark.metadata.name }}
                  - key: {{ settings.component_label }}
                    operator: In
                    values:
                      - worker
          {%- endif %}
