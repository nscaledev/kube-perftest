---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ benchmark.metadata.name }}-ssh-config
  labels:
    {{ settings.kind_label }}: {{ benchmark.kind }}
    {{ settings.namespace_label }}: {{ benchmark.metadata.namespace }}
    {{ settings.name_label }}: {{ benchmark.metadata.name }}
data:
  01-default-port.conf: |
    Port {{ benchmark.spec.ssh_port }}
---
apiVersion: batch.volcano.sh/v1alpha1
kind: Job
metadata:
  name: {{ benchmark.metadata.name }}
  labels:
    {{ settings.kind_label }}: {{ benchmark.kind }}
    {{ settings.namespace_label }}: {{ benchmark.metadata.namespace }}
    {{ settings.name_label }}: {{ benchmark.metadata.name }}
spec:
  maxRetry: 10
  minAvailable: 2
  schedulerName: {{ settings.scheduler_name }}
  queue: {{ settings.queue_name }}
  priorityClassName: {{ benchmark.status.priority_class_name }}
  plugins:
    env: []
    ssh: []
    svc:
      - --disable-network-policy
  policies:
    - event: PodEvicted
      action: RestartJob
  tasks:
    - name: mpi-master
      replicas: 1
      policies:
        # When the master terminates successfully, the job is done
        - event: TaskCompleted
          action: CompleteJob
      template:
        metadata:
          labels:
            {{ settings.kind_label }}: {{ benchmark.kind }}
            {{ settings.namespace_label }}: {{ benchmark.metadata.namespace }}
            {{ settings.name_label }}: {{ benchmark.metadata.name }}
            {{ settings.component_label }}: master
        spec:
          priorityClassName: {{ benchmark.status.priority_class_name }}
          {%- if benchmark.spec.host_network %}
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          {%- endif %}
          restartPolicy: OnFailure
          containers:
            - name: mpi-master
              image: {{ benchmark.spec.image }}
              imagePullPolicy: {{ benchmark.spec.image_pull_policy }}
              env:
                - name: SSH_PORT
                  value: "{{ benchmark.spec.ssh_port }}"
              command:
                - mpi-master
                - --allow-run-as-root
                - --display-map
                - --host
                - "localhost,$(VC_MPI_WORKER_HOSTS)"
                - -np
                - "2"
                - --map-by
                - ppr:1:node
                - --mca
                - btl
                - self,tcp
                - mpitests-IMB-MPI1
                - pingpong
              volumeMounts:
                - name: ssh-config
                  mountPath: /etc/ssh/ssh_config.d/01-default-port.conf
                  subPath: 01-default-port.conf
                  readOnly: true
          volumes:
            - name: ssh-config
              configMap:
                name: {{ benchmark.metadata.name }}-ssh-config
          # Because we generally want to test raw network performance, prevent the pod
          # from running on a node that already has another benchmark component running,
          # for any benchmark
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: {{ settings.kind_label }}
                        operator: Exists
                  topologyKey: "kubernetes.io/hostname"

    - name: mpi-worker
      replicas: 1
      template:
        metadata:
          labels:
            {{ settings.kind_label }}: {{ benchmark.kind }}
            {{ settings.namespace_label }}: {{ benchmark.metadata.namespace }}
            {{ settings.name_label }}: {{ benchmark.metadata.name }}
            {{ settings.component_label }}: worker
        spec:
          priorityClassName: {{ benchmark.status.priority_class_name }}
          {%- if benchmark.spec.host_network %}
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          {%- endif %}
          restartPolicy: OnFailure
          containers:
            - name: mpi-worker
              image: {{ benchmark.spec.image }}
              imagePullPolicy: {{ benchmark.spec.image_pull_policy }}
              env:
                - name: SSH_PORT
                  value: "{{ benchmark.spec.ssh_port }}"
              ports:
                - name: ssh
                  containerPort: {{ benchmark.spec.ssh_port }}
                  protocol: TCP
              command:
                - mpi-worker
              volumeMounts:
                - name: ssh-config
                  mountPath: /etc/ssh/ssh_config.d/01-default-port.conf
                  subPath: 01-default-port.conf
                  readOnly: true
          volumes:
            - name: ssh-config
              configMap:
                name: {{ benchmark.metadata.name }}-ssh-config
          # Because we generally want to test raw network performance, prevent the pod
          # from running on a node that already has another benchmark component running,
          # for any benchmark
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: {{ settings.kind_label }}
                        operator: Exists
                  topologyKey: "kubernetes.io/hostname"
